{"version":3,"sources":["api.js","app.js","environment.js","main.js","room.js","rooms.js","data/db.js","resources/index.js","resources/messages.js","data/stores/base-store.js","data/stores/rooms.js","resources/elements/loading-indicator.js","resources/elements/room-card.js","resources/elements/room-view.js","/home/srinath/dev/open-connections-webrtc/src/resources/elements/room.js","resources/elements/rooms-list.js","/home/srinath/dev/open-connections-webrtc/src/app.html","/home/srinath/dev/open-connections-webrtc/src/room.html","styles/app.scss","/home/srinath/dev/open-connections-webrtc/src/rooms.html","/home/srinath/dev/open-connections-webrtc/src/resources/elements/room-card.html","/home/srinath/dev/open-connections-webrtc/src/resources/elements/room-view.html","/home/srinath/dev/open-connections-webrtc/src/resources/elements/rooms-list.html"],"names":["guid","s4","Math","floor","random","toString","substring","API","roomsStore","isRequesting","roomStore","getRooms","read","getRoom","id","getById","createRoom","name","description","create","createdAt","Date","now","members","then","Promise","resolve","res","catch","console","error","e","deleteRoom","delete","App","configureRouter","config","router","title","map","route","moduleId","debug","testing","configure","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","all","start","setRoot","Room","api","room","canActivate","Rooms","initDB","db","dbv1","version","_initResult","stores","Object","assign","getSchema","open","globalResources","RoomDeleted","BaseStore","storeName","storseName","table","where","equals","toArray","item","add","bulkCreate","items","bulkAdd","predicate","update","bulkUpdate","bulkPut","RoomsStore","rooms","nprogress","LoadingIndicator","defaultValue","on","loadingChanged","newValue","done","RoomCard","ea","connect","navigate","publish","RoomView","status","attached","rtc","localVideoEl","autoRequestMedia","url","err","connection","type","payload","joinRoom","video","peer","sendToAll","log","remotes","document","getElementById","oncontextmenu","className","$container","$","getDomId","find","append","appendTo","el","webrtc","removeChild","RoomsList","subscribe","msg","splice","indexOf","resetCreateNewRoom","createNewRoom","push"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { RoomsStore } from './data/stores/rooms';\nimport { inject } from 'aurelia-framework';\n\n\nfunction guid() {\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    return s4() + s4() + s4() + s4();\n}\n\n@inject(RoomsStore)\nexport class API {\n    isRequesting = false;\n\n    constructor(roomsStore) {\n        this.roomStore = roomsStore;\n    }\n\n    getRooms() {\n        return this.roomStore.read();\n    }\n\n    getRoom(id) {\n        return this.roomStore.getById(id);\n    }\n\n    createRoom({name, description}) {\n        this.isRequesting = true;\n        return this.roomStore.create({\n            id: guid(),\n            name,\n            description,\n            createdAt: Date.now(),\n            members: []\n        }).then(res => {\n            this.isRequesting = false;\n            return Promise.resolve(res);\n        }).catch(e => {\n            this.isRequesting = false;\n            console.error(e);\n        });\n    }\n\n    deleteRoom(id) {\n        return this.roomStore.delete(id);\n    }\n\n}","export class App {\n  configureRouter(config, router) {\n    config.title = 'Open Connections';\n    config.map([\n      { route: '', moduleId: 'rooms', title: 'Rooms' },\n      { route: 'room/:id', moduleId: 'room', name: 'room' }\n    ]);\n\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport dbv1, {initDB} from './data/db';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  Promise.all([initDB(), aurelia.start()])\n    .then(() => aurelia.setRoot());\n}\n","import { inject } from 'aurelia-framework';\nimport { API } from './api';\n\n@inject(API)\nexport class Room {\n    room = null;\n\n    constructor(api) {\n\n        this.api = api;\n    }\n\n    canActivate({id}) {\n        return this.api.getRoom(id).then(room => {\n            this.room = room || { id };\n            return Promise.resolve(true);\n        });\n    }\n}","import { inject } from 'aurelia-framework';\nimport { API } from './api';\n\n@inject(API)\nexport class Rooms {\n    constructor(api) {\n\n        this.api = api;\n\n        this.title = 'Rooms';\n\n        this.name = '';\n        this.description = '';\n    }\n\n    create() {\n\n        this.api.createRoom({\n            name: this.name,\n            description: this.description\n        });\n\n    }\n}","import Dexie from 'dexie';\n\nimport { RoomsStore } from './stores/rooms';  \n\n\nexport const db = new Dexie('open-connections');\n\nlet dbv1 = db.version(1);\n\n\nlet _initResult;\nexport function initDB() {\n    if (_initResult) {\n        return _initResult;\n    }\n\n    dbv1.stores(Object.assign({}, RoomsStore.getSchema()));\n\n    return _initResult = db.open();\n}","export function configure(config) {  \n  config.globalResources(['./elements/loading-indicator']);\n}\n","export class RoomDeleted {\n    constructor(room) {\n        this.room = room;\n    }\n}","import { db } from '../db';\n\nexport default class BaseStore {\n    constructor(storeName) {\n        this.storseName = storeName;\n        this.table = db[storeName];\n    }\n\n    getById(id) {\n        return this.table.where(\"id\").equals(id)\n            .toArray()\n            .then(res => Promise.resolve(res[0]));\n    }\n\n    create(item) {\n        return this.table.add(item).then(id => {\n            return this.table.where(\"id\").equals(id)\n                .toArray()\n                .then(res => Promise.resolve(res[0]));\n        });\n    }\n\n    bulkCreate(items) {\n        return this.table.bulkAdd(items);\n    }\n\n    read(predicate) {\n\n        return predicate ? predicate(this.table) : this.table.toArray();\n    }\n\n    update(id, item) {\n        return this.table.update(id, item);\n    }\n\n    bulkUpdate(items) {\n        return this.table.bulkPut(items);\n    }\n\n    delete(id) {\n        return this.table.delete(id);\n    }\n}","import BaseStore from './base-store';\nimport {inject} from 'aurelia-framework';\n\nexport class RoomsStore extends BaseStore {\n    constructor() {\n        super(\"rooms\");\n    }\n\n    static getSchema() {\n        return { rooms: 'id,name,description,members,createdAt' };\n    }\n\n}","import * as nprogress from 'nprogress';\nimport {bindable, noView, decorators} from 'aurelia-framework';\n\nexport let LoadingIndicator = decorators(\n  noView(['nprogress/nprogress.css']),\n  bindable({name: 'loading', defaultValue: false})\n).on(class {\n  loadingChanged(newValue){\n    if (newValue) {\n      nprogress.start();\n    } else {\n      nprogress.done();\n    }\n  }\n});","import { Router } from 'aurelia-router';\nimport { RoomDeleted } from '../messages';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { bindable, inject } from 'aurelia-framework';\nimport { API } from '../../api';\n\n@inject(Router, API, EventAggregator)\nexport class RoomCard {\n    @bindable room;\n\n    constructor(router, api, ea) {\n        this.router = router;\n        this.api = api;\n        this.ea = ea;\n    }\n\n    connect() {\n        this.router.navigate(`room/${this.room.id}`);\n    }\n\n    delete() {\n        this.api.deleteRoom(this.room.id).then(() => {\n            this.ea.publish(new RoomDeleted(this.room));\n        });\n    }\n\n}","import { Router } from 'aurelia-router';\nimport { RoomDeleted } from '../messages';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { bindable, inject } from 'aurelia-framework';\nimport { API } from '../../api';\n\nimport SimpleWebRTC from 'SimpleWebRTC';\n\n@inject(Router, API, EventAggregator)\nexport class RoomView {\n    @bindable room;\n\n\n    constructor(router, api, ea) {\n        this.router = router;\n        this.api = api;\n        this.ea = ea;\n        this.status = '';\n    }\n\n    attached() {\n        this.rtc = new SimpleWebRTC({\n            localVideoEl: 'localVideo'\n        });\n\n        this.rtc = new SimpleWebRTC({\n            // the id/element dom element that will hold \"our\" video \n            localVideoEl: 'localVideo',\n\n            // immediately ask for camera access \n            autoRequestMedia: true,\n            url: 'https://connections.appsflare.com/'\n        });\n\n        if (this.room.name) {\n            this.rtc.createRoom(this.room.id, (err, room) => {\n                err && console.error(err);\n            });\n\n        }\n        else {\n            this.rtc.connection.on('message', ({type, payload}) => {\n                if (type === 'roomDetails') {\n                    this.room.name = payload.name;\n                    this.room.description = payload.description;\n                }\n            });\n\n            this.rtc.joinRoom(this.room.id, (err, room) => {\n                err && console.error(err);\n            });\n\n\n        }\n\n\n        this.rtc.on('videoAdded', (video, peer) => {\n\n            this.rtc.sendToAll(\"roomDetails\", { name: this.room.name, description: this.room.description });\n\n            console.log('video added', peer);\n            var remotes = document.getElementById('remotes');\n            if (remotes) {\n                // suppress contextmenu\n                video.oncontextmenu = function () { return false; };\n                video.className = \"embed-responsive-item\";\n\n                var $container = $(`<div class=\".col-md-6\"><div class=\"panel panel-default\" id=\"${this.rtc.getDomId(peer)}\">\n            <div class=\"panel-body\"><div class=\"embed-responsive embed-responsive-16by9\">\n                \n            </div></div>\n            <div class=\"panel-footer\">Panel footer</div>\n        </div></div>`);\n                $container.find('.embed-responsive').append(video);\n\n                $container.appendTo(remotes);\n\n\n            }\n        });\n\n        // a peer video was removed\n        this.rtc.on('videoRemoved', function (video, peer) {\n            console.log('video removed ', peer);\n            var remotes = document.getElementById('remotes');\n            var el = document.getElementById(peer ? 'container_' + webrtc.getDomId(peer) : 'localScreenContainer');\n            if (remotes && el) {\n                remotes.removeChild(el);\n            }\n        });\n    }\n\n    delete() {\n        this.api.deleteRoom(this.room.id).then(() => {\n            this.ea.publish(new RoomDeleted(this.room));\n        });\n    }\n\n}",null,"import { API } from '../../api';\nimport { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { RoomDeleted } from '../messages';\n\n@inject(API, EventAggregator)\nexport class RoomsList {\n    room = { name: '', description: '' };\n    rooms = [];\n\n    constructor(api, ea) {\n        this.api = api;\n        this.ea = ea;\n\n        this.ea.subscribe(RoomDeleted, msg => {\n            if (!msg || !msg.room)\n            { return; }\n\n            this.rooms.splice(this.rooms.indexOf(msg.room), 1);\n        });\n    }\n\n    resetCreateNewRoom() {\n        this.room.name = '';\n        this.room.description = '';\n    }\n\n    createNewRoom() {\n        this.api.createRoom(this.room)\n            .then(room => this.rooms.push(room));\n    }\n\n    attached() {\n        this.api.getRooms().then(rooms => this.rooms = rooms);\n    }\n\n}",null,null,"body { padding-top: 70px; }",null,null,null,null],"sourceRoot":"../src"}